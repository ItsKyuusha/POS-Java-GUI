/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pos.javagui;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSetMetaData;  // Pastikan yang digunakan ini
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;  // Import untuk koneksi MySQL
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
/**
 *
 * @author Kyuusha
 */
public class FormMasterKonsumen extends javax.swing.JFrame {
// Koneksi dan objek terkait
    Connection Con; 
    ResultSet RsKons; 
    Statement stm; 
    
    Boolean ada = false; 
    Boolean edit = false; 
    
    private Object[][] dataTable = null; 
    private String[] header = {"Kode", "Nama Konsumen", "Alamat", "Kota", "Kode Pos", "Phone", "Email"};
    /**
     * Creates new form FormMasterKonsumen
     */
    public FormMasterKonsumen() {
        initComponents();
        open_db();  // Membuka koneksi database
        baca_data();  // Membaca data dari database
        aktif(false);  // Menonaktifkan form input
        setTombol(true);  // Mengatur tombol-tombol
        
        // Menambahkan MouseListener ke tabel
        tblKons.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = tblKons.getSelectedRow();
                if (selectedRow >= 0) {
                    String kode = tblKons.getValueAt(selectedRow, 0).toString();
                    kd_kons.setText(kode);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        kd_pos = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        kd_kons = new javax.swing.JTextField();
        nm_kons = new javax.swing.JTextField();
        kota_kons = new javax.swing.JTextField();
        alm_kons = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKons = new javax.swing.JTable();
        batal = new javax.swing.JButton();
        keluar = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        simpan = new javax.swing.JButton();
        koreksi = new javax.swing.JButton();
        hapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setText("Telepon");

        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });

        jLabel8.setText("Kode Pos");

        jLabel7.setText("Email");

        kd_pos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kd_posActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Data Konsumen");

        jLabel2.setText("Kode Konsumen");

        jLabel3.setText("Nama Konsumen");

        jLabel4.setText("Alamat");

        jLabel5.setText("Kota");

        kd_kons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kd_konsActionPerformed(evt);
            }
        });

        nm_kons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nm_konsActionPerformed(evt);
            }
        });

        alm_kons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alm_konsActionPerformed(evt);
            }
        });

        tblKons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode", "Nama Konsumen", "Alamat", "Kota", "Kode Pos", "Phone", "Email"
            }
        ));
        jScrollPane1.setViewportView(tblKons);

        batal.setText("Batal");
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });

        keluar.setText("Keluar");
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });

        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        koreksi.setText("Koreksi");
        koreksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                koreksiActionPerformed(evt);
            }
        });

        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tambah)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(simpan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(koreksi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hapus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(batal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(keluar))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(86, 86, 86)
                                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(131, 131, 131)
                                        .addComponent(kd_pos, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(131, 131, 131)
                                        .addComponent(kota_kons))
                                    .addComponent(jLabel1)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(nm_kons, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                            .addComponent(kd_kons)
                                            .addComponent(alm_kons)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95)
                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(kd_kons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nm_kons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(alm_kons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kota_kons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kd_pos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tambah)
                    .addComponent(simpan)
                    .addComponent(koreksi)
                    .addComponent(hapus)
                    .addComponent(batal)
                    .addComponent(keluar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void kd_posActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kd_posActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kd_posActionPerformed

    private void kd_konsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kd_konsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kd_konsActionPerformed

    private void nm_konsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nm_konsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nm_konsActionPerformed

    private void alm_konsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alm_konsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alm_konsActionPerformed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        aktif(false);
        setTombol(true);
    }//GEN-LAST:event_batalActionPerformed

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_keluarActionPerformed

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        aktif(true);
        setTombol(false);
        kosong();
    }//GEN-LAST:event_tambahActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        // Pastikan koneksi database sudah ada
        if (Con == null) {
            JOptionPane.showMessageDialog(this, "Koneksi ke database tidak tersedia.");
            return;
        }

        try {
            // Pastikan Statement diinisialisasi baru sebelum digunakan
            stm = Con.createStatement();  // Membuat Statement baru

            String tKode = kd_kons.getText();
            String tNama = nm_kons.getText();
            String tAlamat = alm_kons.getText();
            String tKota = kota_kons.getText();
            String tKodepos = kd_pos.getText();
            String tPhone = phone.getText();
            String tEmail = email.getText();

            // Periksa apakah mode edit atau tambah
            if (edit) {  // Jika edit == true, maka update
                String sql = "UPDATE konsumen SET " +
                             "nm_kons = '" + tNama + "', " +
                             "alm_kons = '" + tAlamat + "', " +
                             "kota_kons = '" + tKota + "', " +
                             "kd_pos = '" + tKodepos + "', " +
                             "phone = '" + tPhone + "', " +
                             "email = '" + tEmail + "' " +
                             "WHERE kd_kons = '" + tKode + "'";
                stm.executeUpdate(sql);
            } else {  // Jika edit == false, maka insert
                String sql = "INSERT INTO konsumen (kd_kons, nm_kons, alm_kons, kota_kons, kd_pos, phone, email) " +
                             "VALUES ('" + tKode + "', '" + tNama + "', '" + tAlamat + "', '" + tKota + "', '" + tKodepos + "', '" + tPhone + "', '" + tEmail + "')";
                stm.executeUpdate(sql);
            }

            // Setelah selesai melakukan insert atau update, baca data lagi
            baca_data();
            JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");

            // Setelah selesai, reset form atau aktifkan tombol sesuai dengan kebutuhan
            kosong();
            aktif(false);
            setTombol(true);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error menyimpan data: " + e.getMessage());
        } finally {
            // Tutup statement setelah selesai
            try {
                if (stm != null && !stm.isClosed()) {
                    stm.close();  // Pastikan statement ditutup setelah digunakan
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error menutup statement: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_simpanActionPerformed

    private void koreksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_koreksiActionPerformed
        edit = true;
        aktif(true);
        setTombol(false);
        kd_kons.setEditable(false);

        // Mengambil data dari baris yang dipilih di tabel dan memasukkan ke form
        int row = tblKons.getSelectedRow();  // Ambil data dari baris yang dipilih
        kd_kons.setText(tblKons.getValueAt(row, 0).toString());
        nm_kons.setText(tblKons.getValueAt(row, 1).toString());
        alm_kons.setText(tblKons.getValueAt(row, 2).toString());
        kota_kons.setText(tblKons.getValueAt(row, 3).toString());
        kd_pos.setText(tblKons.getValueAt(row, 4).toString());
        phone.setText(tblKons.getValueAt(row, 5).toString());
        email.setText(tblKons.getValueAt(row, 6).toString());
    }//GEN-LAST:event_koreksiActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        try {
            // Pastikan statement selalu dibuat setelah koneksi aktif
            if (Con == null || Con.isClosed()) {
                open_db();  // Membuka koneksi jika belum ada
            }

            // Membuat statement baru setiap kali hapus
            stm = Con.createStatement();

            // Mengecek jika kode barang tidak kosong
            if (kd_kons.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Kode Konsumen tidak boleh kosong!", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // SQL query untuk hapus data
            String sql = "DELETE FROM konsumen WHERE kd_kons='" + kd_kons.getText() + "'";
            int affectedRows = stm.executeUpdate(sql);

            // Memeriksa apakah baris berhasil dihapus
            if (affectedRows > 0) {
                // Jika berhasil menghapus, tampilkan pesan sukses
                JOptionPane.showMessageDialog(null, "Data Konsumen berhasil dihapus!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Jika tidak ada baris yang dihapus (misalnya, data tidak ditemukan)
                JOptionPane.showMessageDialog(null, "Data Konsumen tidak ditemukan!", "Gagal", JOptionPane.ERROR_MESSAGE);
            }

            // Memanggil baca_data untuk memperbarui tampilan setelah data dihapus
            baca_data();

            // Mengosongkan input form setelah berhasil
            kosong();
        } catch (SQLException e) {
            // Menampilkan error jika terjadi SQLException
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (stm != null) {
                    stm.close();  // Menutup statement setelah digunakan
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error menutup statement: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_hapusActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneActionPerformed

    // Method untuk membuka koneksi database
    private void open_db() { 
        try { 
            // Membuat objek koneksi dan membuka koneksi ke database
            KoneksiMysql kon = new KoneksiMysql("localhost", "root", "", "pos_javagui");
            Con = kon.getConnection(); 
            // System.out.println("Koneksi Berhasil");
        } catch (Exception e) { 
            System.out.println("Error : " + e); 
        } 
    }
    
    private void baca_data() { 
    // Mulai dengan try-catch untuk menangani SQLException
    Statement stm = null;
    ResultSet RsKons = null;

    try { 
        // Membuat statement dengan ResultSet yang dapat digulir (scrollable)
        stm = Con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY); // Menggunakan scrollable ResultSet
        RsKons = stm.executeQuery("SELECT * FROM konsumen");  // Menjalankan query

        // Mengambil metadata dari ResultSet
        ResultSetMetaData meta = RsKons.getMetaData(); 
        int col = meta.getColumnCount(); 
        int baris = 0;
        
        // Hitung jumlah baris dari ResultSet
        while (RsKons.next()) { 
            baris = RsKons.getRow(); 
        }

        // Menyiapkan array untuk menampung data
        dataTable = new Object[baris][col]; 
        int x = 0; 
        RsKons.beforeFirst();  // Set kembali posisi pointer ResultSet
        
        // Memasukkan data ke dalam array dataTable
        while (RsKons.next()) { 
            dataTable[x][0] = RsKons.getString("kd_kons"); 
            dataTable[x][1] = RsKons.getString("nm_kons"); 
            dataTable[x][2] = RsKons.getString("alm_kons");
            dataTable[x][3] = RsKons.getString("kota_kons");
            dataTable[x][4] = RsKons.getString("kd_pos"); 
            dataTable[x][5] = RsKons.getString("phone");
            dataTable[x][6] = RsKons.getString("email"); 
            x++; 
        }

        // Menampilkan data ke dalam JTable
        tblKons.setModel(new DefaultTableModel(dataTable, header));

        } catch (SQLException e) { 
            // Menangani SQLException dengan menampilkan pesan error
            JOptionPane.showMessageDialog(null, "Error membaca data: " + e.getMessage()); 
        } finally {
            // Pastikan untuk hanya menutup ResultSet dan Statement setelah semua selesai digunakan.
            try {
                if (RsKons != null && !RsKons.isClosed()) {
                    RsKons.close();  // Hanya tutup ResultSet jika sudah tidak digunakan
                }
                if (stm != null && !stm.isClosed()) {
                    stm.close();  // Hanya tutup Statement jika sudah tidak digunakan
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error menutup koneksi: " + e.getMessage());
            }
        }
    }
    
    // Method untuk mengosongkan input form
    private void kosong() { 
        kd_kons.setText(""); 
        nm_kons.setText(""); 
        alm_kons.setText("");
        kota_kons.setText("");
        kd_pos.setText(""); 
        phone.setText(""); 
        email.setText(""); 
    }
    
    // Method untuk mengaktifkan/menonaktifkan input field
    private void aktif(boolean x) { 
        kd_kons.setEditable(x); 
        nm_kons.setEditable(x);
        alm_kons.setEditable(x);
        kota_kons.setEditable(x);
        kd_pos.setEditable(x);
        phone.setEditable(x); 
        email.setEditable(x); 
    }
    
    // Method untuk mengaktifkan/menonaktifkan tombol
    private void setTombol(boolean t) { 
        tambah.setEnabled(t); 
        koreksi.setEnabled(t); 
        hapus.setEnabled(t); 
        simpan.setEnabled(!t); 
        batal.setEnabled(!t); 
        keluar.setEnabled(t); 
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMasterKonsumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMasterKonsumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMasterKonsumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMasterKonsumen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMasterKonsumen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alm_kons;
    private javax.swing.JButton batal;
    private javax.swing.JTextField email;
    private javax.swing.JButton hapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField kd_kons;
    private javax.swing.JTextField kd_pos;
    private javax.swing.JButton keluar;
    private javax.swing.JButton koreksi;
    private javax.swing.JTextField kota_kons;
    private javax.swing.JTextField nm_kons;
    private javax.swing.JTextField phone;
    private javax.swing.JButton simpan;
    private javax.swing.JButton tambah;
    private javax.swing.JTable tblKons;
    // End of variables declaration//GEN-END:variables

}
